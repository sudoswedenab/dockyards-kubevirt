# Copyright 2025 Sudo Sweden AB
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

image: docker.io/library/golang:1.24.1

definitions:
  steps:
  - step: &default
      name: default
      script:
      - echo "export VERSION=$(git branch --show-current)-$(git rev-parse --short HEAD)-$(date +%s)" >> env.sh
      - echo "export IMAGE=075899289117.dkr.ecr.eu-north-1.amazonaws.com/dockyards-kubevirt" >> env.sh
      - echo "export REVISION=$(git branch --show-current)@$(git rev-parse --show-object-format):$(git rev-parse HEAD)" >> env.sh
      - cat env.sh
      artifacts:
      - env.sh
  - step: &tag
      name: tag
      script:
      - echo "export VERSION=$(git describe --exact-match)" >> env.sh
      - echo "export IMAGE=075899289117.dkr.ecr.eu-north-1.amazonaws.com/dockyards-kubevirt" >> env.sh
      - echo "export REVISION=$(git branch --show-current)@$(git rev-parse --show-object-format):$(git rev-parse HEAD)" >> env.sh
      artifacts:
      - env.sh
  - step: &build
      name: build
      script:
      - source env.sh
      - go install cuelang.org/go/cmd/cue@v0.9.1
      - docker build . --file Containerfile --tag dockyards-kubevirt
      - docker save dockyards-kubevirt --output dockyards-kubevirt.tar
      - cue eval hack/kustomization.cue --inject "name=${IMAGE}" --inject "tag=${VERSION}" --out yaml --outfile config/kustomization.yaml
      services:
      - docker
      caches:
      - docker
      artifacts:
      - dockyards-kubevirt.tar
      - config/kustomization.yaml
  - step: &push
      name: push
      script:
      - source env.sh
      - cat ecr-login-password | docker login --username AWS --password-stdin 075899289117.dkr.ecr.eu-north-1.amazonaws.com
      - docker load --input dockyards-kubevirt.tar
      - docker tag dockyards-kubevirt "${IMAGE}:${VERSION}"
      - docker push "${IMAGE}:${VERSION}"
      services:
      - docker
  - step: &vendor
      name: vendor
      script:
      - export GOPRIVATE=bitbucket.org/sudosweden
      - git config --global url."ssh://git@bitbucket.org/".insteadOf "https://bitbucket.org/"
      - go mod vendor
      artifacts:
      - vendor/**
  - step: &ecr-login
      name: ecr-login
      image: docker.io/amazon/aws-cli:2.15.19
      oidc: true
      script:
      - echo $BITBUCKET_STEP_OIDC_TOKEN > /tmp/web-identity-token
      - aws configure --profile bitbucket set region eu-north-1
      - aws configure --profile bitbucket set role_arn arn:aws:iam::075899289117:role/BitbucketPipelinesDockyardsKubevirt
      - aws configure --profile bitbucket set web_identity_token_file /tmp/web-identity-token
      - aws ecr get-login-password --profile bitbucket > ecr-login-password
      artifacts:
      - ecr-login-password
  - step: &flux
      name: flux
      image: ghcr.io/fluxcd/flux-cli:v2.2.3
      script:
      - source env.sh
      - flux push artifact "oci://${IMAGE}:${VERSION}-manifests" --path config --source "$BITBUCKET_GIT_HTTP_ORIGIN" --revision "$REVISION" --creds "AWS:$(cat ecr-login-password)"
  - step: &test
      name: test
      script:
      - source <(go tool setup-envtest use --print env 1.31.0)
      - go test ./... -v

pipelines:
  default:
  - step: *default
  - step: *vendor
  - step: *test
  - step: *build
  - step: *ecr-login
  - step: *push
  - step: *flux
  tags:
    'v*':
    - step: *tag
    - step: *vendor
    - step: *test
    - step: *build
    - step: *ecr-login
    - step: *push
    - step: *flux
